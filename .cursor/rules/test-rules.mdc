---
description: All things tests - writing, editing, reviewing, running tests
alwaysApply: false
---
# gh-switcher Testing Rules (BATS-first)

**Default framework**: bats-core 1.10+
**Optional**: Vitest *only* for complex integration, requiring `testing-vitest` label & maintainer approval.

## Isolation MUST-Dos
1. Each BATS file begins with `load 'helpers/test_helper'` and calls `setup_test_environment` / `cleanup_test_environment`.  
2. Operate exclusively inside `$TEST_HOME`; never touch the real `$HOME`.  
3. Restore `cd` if changed during a test.  
4. No global `skip` directives.

## Assertion Cheat-Sheet
See the `assertions` array in the YAML header of this file for the canonical list of helper commands and usage examples.

## Directory Layout
```
tests/
  helpers/        # shared Bash helpers
  unit/           # <200 LoC, fast
  integration/    # CLI workflows, may be tagged @slow
```

## CI Rules
* `npm run lint` executes `shellcheck -x -e SC1091,SC2155 gh-switcher.sh` and must have zero errors.  
* `npm test` runs all BATS files under `tests/**/*.bats`.  
* Tests tagged `@slow` are skipped in the main job and executed nightly.

## Local Quick-Start
```bash
brew install bats-core shellcheck   # or apt equivalents
npm ci                               # dev deps (Vitest optional)

npm run lint  # shellcheck
npm test      # run all BATS tests
```

## Code Smells / Anti-Patterns to Avoid
* Unscoped temp files or writing outside `$TEST_HOME`.  
* Hard-coded absolute paths.  
* Network calls; mock instead.  
* Using `echo` for unescaped user input (prefer `printf`).

## Runtime Guideline
Any single BATS file must complete in < **5 s** on `ubuntu-latest` runners. Tag slower specs `@slow`.
